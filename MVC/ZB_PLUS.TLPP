#include 'tlpp-core.th'
#Include 'Protheus.ch'
#Include 'FWMVCDef.ch'

#DEFINE ENTER Chr(13)+Chr(10)


//Criar uma validaÃ§Ã£o para as rotinas customizadas

Class Check
	public Method New()
	public Method Acess() as Logical
EndClass

Method New() class Check
Return Self

Method Acess() as Logical class Check
	Local cUserLogado as Character
	Local cRotAtual as Character
	Local lAcesso as Logical
	Local cQuery:="" as Character
	Local nRec := 0 as Numeric 
	
	lAcesso:=.f.
	cUserLogado := RetCodUsr()
	cRotAtual := oApp:oMainWnd:cTitle

	//Consulta de usuario de funcao
	cQuery+=" select * from " + RetSQLName("ZZB") + ENTER
	cQuery+=" WHERE D_E_L_E_T_ <> '*' AND " + ENTER
	cQuery+=" ZB_CODUSU = '"+ Alltrim(cUserLogado) + "' AND " + ENTER
	cQuery+=" ZB_FUNCAO = '"+ AllTRim(cRotAtual)+ "' " + ENTER

	MemoWrite("AcessosXRots.sql",cQuery)

	dbUseArea( .T.,"TOPCONN", TCGENQRY(,,cQuery),"TRBZB", .F., .T.)

	Count To nRec

	If nRec == 0
		Alert("NAO FORAM ENCONTRADOS DADOS, REFACA OS PARAMETROS","ATENCAO")
		DbSelectArea("TRBZB")
		dbCloseArea()
		Return
	EndIf

	dbSelectArea("TRBZB")
	dbGoTop()

	//Olha dentro da tabela ZZB e salva as funções cadastradas do usuario corrente
	while !Eof()
		if ZB_FUNCAO == cRotAtual
			lAcesso := .t.
		endif
		dbSkip()
	end
	dbCloseArea()

Return lAcesso
